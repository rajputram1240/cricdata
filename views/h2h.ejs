<!DOCTYPE html>
<html lang="en">
  <%- include('partials/header', { activePage: activePage }) %>
  <style>
    body {
  background-color: #f7f7f7;
  font-family: 'Arial', sans-serif;
  padding-top: 70px;
}

/* Enhanced Navbar */
.navbar {
  background: linear-gradient(90deg, #007bff, #4a90e2);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.navbar-brand {
  font-size: 1.5rem;
  font-weight: 700;
  color: #fff;
  display: flex;
  align-items: center;
}

.navbar-brand img {
  width: 40px;
  height: 40px;
  margin-right: 10px;
}

.navbar-nav .nav-link {
  color: #fff;
  font-weight: 600;
  font-size: 1rem;
  margin: 0 10px;
  position: relative;
}

.navbar-nav .nav-link::after {
  content: '';
  width: 0;
  height: 2px;
  background: #ffdd57;
  position: absolute;
  bottom: -5px;
  left: 50%;
  transform: translateX(-50%);
  transition: width 0.3s ease-in-out;
}

.navbar-nav .nav-link:hover::after,
.navbar-nav .nav-link.active::after {
  width: 100%;
}

.navbar-toggler {
  border: none;
  color: #fff;
}

h1 {
  color: #007bff;
  font-size: 2.5rem;
  text-align: center;
  margin-bottom: 40px;
  font-weight: 700;
}

.match-card {
  border: 1px solid #ddd;
  border-radius: 8px;
  margin-bottom: 20px;
  padding: 20px;
  background-color: #fff;
  box-shadow: 0 4px 8px rgba(0, 123, 255, 0.1);
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease;
}

.match-card:hover {
  transform: scale(1.03);
  box-shadow: 0 8px 16px rgba(0, 123, 255, 0.3);
}

.footer {
  text-align: center;
  margin-top: 40px;
  font-size: 0.9rem;
  color: #777;
}


.container {
  margin-top: 30px;
}
h1, h3 {
  color: #007bff;
  text-align: center;
  font-weight: bold;
}
.match-details {
  background-color: #ffffff;
  padding: 30px;
  border-radius: 15px;
  box-shadow: 0 6px 15px rgba(0, 123, 255, 0.1);
  margin-bottom: 30px;
}
.btn-primary {
  background-color: #007bff;
  border: none;
  padding: 12px 25px;
  font-size: 18px;
  font-weight: 600;
  border-radius: 30px;
  transition: all 0.3s ease;
}
.btn-primary:hover {
  background-color: #0056b3;
  transform: scale(1.05);
}
.table thead {
  background-color: #007bff;
  color: white;
  border-radius: 8px;
}
.table th, .table td {
  vertical-align: middle;
  text-align: center;
  padding: 12px;
}
h5 {
  margin-top: 20px;
  color: #28a745;
  font-weight: 600;
}
.table-bordered {
  border: 2px solid #dee2e6;
  border-radius: 10px;
  overflow: hidden;
}
.table-bordered th, .table-bordered td {
  border: 1px solid #dee2e6;
}
.table tbody tr:hover {
  background-color: #f1f1f1;
  transition: all 0.3s ease;
}
.card-header {
  background-color: #007bff;
  color: white;
  font-size: 1.2rem;
  font-weight: 600;
  padding: 10px 15px;
  border-radius: 8px 8px 0 0;
}
.card-body {
  padding: 20px;
}

.select2-container--default .select2-selection--multiple {
            border: 1px solid #ced4da;
            border-radius: .25rem;
            padding: .375rem .75rem;
        }
  </style>
<body>
  <!-- Include Navbar -->
  <%- include('partials/menu', { activePage: activePage }) %>

  <!-- Main Content -->
  <div class="container">
    <% if (success_msg && success_msg !="") { %>
      <div class="alert alert-success">
        <%= success_msg %>
      </div>
    <% } %>
    <% if (error_msg && error_msg !="") { %>
      <div class="alert alert-danger">
        <%= error_msg %>
      </div>
    <% } %>
    <h1>Head to Head</h1>

    <div class="mb-3">
      <select id="league" class="form-select">
        <option value="">Select League</option>
        <% leagues.forEach(league => { %>
          <option value="<%= league %>"><%= league %></option>
        <% }); %>
      </select>
    </div>

    <div class="mb-3">
      <select id="team1" class="form-select">
        <option value="">Select Team 1</option>
        <!-- Teams will be populated dynamically based on the selected league -->
      </select>
    </div>

    <div class="mb-3">
      <select id="team2" class="form-select">
        <option value="">Select Team 2</option>
        <!-- Teams will be populated dynamically based on the selected league -->
      </select>
    </div>

    <button class="btn btn-primary" onclick="getMatches()">Show Matches</button>

    <h2 class="my-4">Matches:</h2>
    <div id="matches">
      <% if (matches.length > 0) { %>
        <% matches.forEach(match => { %>
          <div class="match-card">
            <h5><%= match.matchInfo.team1 %> vs <%= match.matchInfo.team2 %></h5>
            <p><strong>League:</strong> <%= match.matchInfo.league %></p>
            <p><strong>Match Date:</strong> <%= new Date(match.matchInfo.matchDate).toLocaleDateString() %></p>
            <p><strong>Venue:</strong> <%= match.matchInfo.venue %></p>
            <!-- Link to scorecard page with match ID -->
            <a class="btn btn-info" href="/scorecard/<%= match._id %>">View Scorecard</a>
          </div>
        <% }); %>
      <% } else { %>
        <p>No matches found.</p>
      <% } %>
    </div>
  </div>

  <!-- Include Footer -->
  <%- include('partials/footer', { year: new Date().getFullYear() }) %>
  <script>
    $(document).ready(function() {
        $('#league').select2({
            placeholder: "Select League",
            allowClear: true,
            maximumSelectionLength: 2,
            width: 'resolve'
        });

        $('#team1').select2({
            placeholder: "Select Team 1",
            allowClear: true,
            maximumSelectionLength: 2,
            width: 'resolve'
        });

        $('#team2').select2({
            placeholder: "Select Team 2",
            allowClear: true,
            maximumSelectionLength: 2,
            width: 'resolve'
        });

        $('#league').on('change', function() {
                const leagues = $(this).val(); // Array of selected values
                filterTeams(leagues);
            });

         async function filterTeams(leagues) {
              const league = leagueSelect.value;
        if (!league) return;
    
        try {
          const response = await fetch(`/getAllLeagueTeam?league=${league}`);
          const teams = await response.json();
          
          // Populate team 1 and team 2 dropdowns
          updateTeamSelects(teams);
        } catch (error) {
          console.error('Error fetching teams:', error);
          alert('An error occurred while fetching teams.');
        }
            }


             // Update team selects with the list of teams
      function updateTeamSelects(teams) {
        team1Select.innerHTML = '<option value="">Select Team 1</option>';
        team2Select.innerHTML = '<option value="">Select Team 2</option>';
    
        teams.forEach(team => {
          const option = `<option value="${team}">${team}</option>`;
          team1Select.innerHTML += option;
          team2Select.innerHTML += option;
        });
      }
    
      $('#team1').on('change', function() {
        updateTeamOptions();
      });

      $('#team2').on('change', function() {
        updateTeamOptions();
      });

      function updateTeamOptions() {
        const team1Selected = team1Select.value;
        const team2Selected = team2Select.value;
    
        // Remove the selected team from the other dropdown
        team2Select.querySelectorAll('option').forEach(option => {
          option.disabled = option.value === team1Selected || option.value === team2Selected;
        });
    
        team1Select.querySelectorAll('option').forEach(option => {
          option.disabled = option.value === team1Selected || option.value === team2Selected;
        });
      }
      });
</script>
</body>
</html>